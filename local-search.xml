<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>谷歌相机拍摄</title>
    <link href="/2023/11/06/%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA%E6%8B%8D%E6%91%84/"/>
    <url>/2023/11/06/%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA%E6%8B%8D%E6%91%84/</url>
    
    <content type="html"><![CDATA[<h3 id="路边树"><a href="#路边树" class="headerlink" title="路边树"></a>路边树</h3><img src="https://cdn.jsdelivr.net/gh/cxxym/tpc/CRnall_20231106_122502563.jpg"><h3 id="紫花"><a href="#紫花" class="headerlink" title="紫花"></a>紫花</h3><img src="https://cdn.jsdelivr.net/gh/cxxym/tpc/CRnall_20231030_130432364.jpg"><h3 id="树叶阳光"><a href="#树叶阳光" class="headerlink" title="树叶阳光"></a>树叶阳光</h3><img src="https://cdn.jsdelivr.net/gh/cxxym/tpc/IMG_20231031_180528.jpg">]]></content>
    
    
    
    <tags>
      
      <tag>随拍</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>储存目录清理脚本分享</title>
    <link href="/2022/09/28/%E5%82%A8%E5%AD%98%E7%9B%AE%E5%BD%95%E6%B8%85%E7%90%86%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/09/28/%E5%82%A8%E5%AD%98%E7%9B%AE%E5%BD%95%E6%B8%85%E7%90%86%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>因为长时间饱受垃圾文件折磨，又不想过多耗电，于是我便乱写了“垃圾文件清理脚本”它具有以下功能：<br>1.清理储存目录（保持干净整洁。<br>2.白名单功能（脚本不会删除白名单内文件。<br>3.日志记录。<br>它的缺点:<br>1.脚本内没有添加识别脚本自身、配置文件及日志功能，所以需在配置文件添加。<br><img src="https://www.hualigs.cn/image/63343698b4997.jpg"></p><h1 id="声明：使用本脚本造成任何“财产损失”及“文件丢失”与“作者”无关。"><a href="#声明：使用本脚本造成任何“财产损失”及“文件丢失”与“作者”无关。" class="headerlink" title="声明：使用本脚本造成任何“财产损失”及“文件丢失”与“作者”无关。"></a>声明：使用本脚本造成任何“财产损失”及“文件丢失”与“作者”无关。</h1><h2 id="脚本及其配置文件只能放置在储存目录，不能放置在其他目录，否则你的储存目录内“-storage-emulated-0-”所有文件可能被删除。"><a href="#脚本及其配置文件只能放置在储存目录，不能放置在其他目录，否则你的储存目录内“-storage-emulated-0-”所有文件可能被删除。" class="headerlink" title="脚本及其配置文件只能放置在储存目录，不能放置在其他目录，否则你的储存目录内“&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;”所有文件可能被删除。"></a>脚本及其配置文件只能放置在储存目录，不能放置在其他目录，否则你的储存目录内“&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;”所有文件可能被删除。</h2><h2 id="使用教程如下"><a href="#使用教程如下" class="headerlink" title="使用教程如下"></a>使用教程如下</h2><h3 id="首先复制下面源码"><a href="#首先复制下面源码" class="headerlink" title="首先复制下面源码"></a>首先复制下面源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#作者 panxiao</span></span><br><span class="line"><span class="comment"># 判断是否root执行</span></span><br><span class="line"><span class="keyword">if</span> [ `<span class="built_in">id</span> -u` -ne 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="comment"># 开始计时</span></span><br><span class="line">start_time=$(<span class="built_in">date</span> +%s.%N)</span><br><span class="line"><span class="comment"># 创建一个文件来储存白名单中的文件名</span></span><br><span class="line"><span class="built_in">touch</span> whitelist.txt</span><br><span class="line"><span class="comment"># 获取白名单列表的行数及所有文件数量</span></span><br><span class="line">white_lines=$(<span class="built_in">cat</span> whitelist.txt | <span class="built_in">wc</span> -l)</span><br><span class="line">all_files=$(<span class="built_in">ls</span> -A /storage/emulated/0 | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="comment"># 设置删除计数和删除记录文件路径</span></span><br><span class="line">deleted=0</span><br><span class="line">log_path=<span class="string">&quot;/sdcard/deleted_files.log&quot;</span></span><br><span class="line"><span class="comment"># 定义并发线程数</span></span><br><span class="line">thread_num=10</span><br><span class="line"><span class="comment"># 在日志文件中写入当前时间和操作说明</span></span><br><span class="line"><span class="comment">#echo &quot;$(date &#x27;+%Y-%m-%d %H:%M:%S&#x27;) - 删除非白名单文件&quot; &gt;&gt; $log_path</span></span><br><span class="line"><span class="comment"># 遍历所有文件并删除非白名单文件</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> $(<span class="built_in">ls</span> -a /storage/emulated/0); <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># 如果文件不在白名单中，则删除</span></span><br><span class="line">  <span class="keyword">if</span> ! grep -q <span class="string">&quot;<span class="variable">$file_name</span>&quot;</span> whitelist.txt; <span class="keyword">then</span></span><br><span class="line">    ((deleted++))</span><br><span class="line"><span class="comment"># 在新线程中删除文件</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">rm</span> -rf <span class="string">&quot;/storage/emulated/0/<span class="variable">$file_name</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$deleted</span>=&gt;删除<span class="variable">$file_name</span>&quot;</span></span><br><span class="line">    <span class="comment">#echo &quot;$(date &#x27;+%Y-%m-%d %H:%M:%S&#x27;) - 删除文件：$file_name&quot; &gt;&gt; $log_path</span></span><br><span class="line">  &#125; &amp;</span><br><span class="line">  <span class="comment"># 控制并发线程数量</span></span><br><span class="line"> <span class="comment">#while [ $(jobs | wc -l) -ge $thread_num ]; do</span></span><br><span class="line">  <span class="comment">#   sleep 1</span></span><br><span class="line"><span class="comment">#   done</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># 等待所有线程结束</span></span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"><span class="comment"># 停止计时</span></span><br><span class="line">end_time=$(<span class="built_in">date</span> +%s.%N)</span><br><span class="line">elapsed=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$end_time</span> - <span class="variable">$start_time</span>&quot;</span> | bc)</span><br><span class="line"><span class="comment"># 格式化时间，确保输出3位数</span></span><br><span class="line">formatted_time=$(<span class="built_in">printf</span> <span class="string">&quot;%.3f&quot;</span> <span class="variable">$elapsed</span>)</span><br><span class="line"><span class="comment"># 输出删除统计信息和完成提示</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;删除完成！共删除了 <span class="variable">$deleted</span> 个文件用时<span class="variable">$formatted_time</span>秒（不包括白名单中的文件）&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;详细记录请查看：<span class="variable">$log_path</span>&quot;</span></span><br><span class="line"><span class="comment"># 如果为root执行则提示并退出脚本</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    i=0</span><br><span class="line">    <span class="keyword">while</span> ((i&lt;=<span class="number">20</span>)) <span class="keyword">do</span></span><br><span class="line">      ((i++))</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;禁止使用root运行-此操作可能使设备变砖!&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></div></figure></td></tr></table></figure><h3 id="使用mt管理器在储存目录“-storage-emulated-0-”随便创建一个后缀为sh的文件"><a href="#使用mt管理器在储存目录“-storage-emulated-0-”随便创建一个后缀为sh的文件" class="headerlink" title="使用mt管理器在储存目录“&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;”随便创建一个后缀为sh的文件"></a>使用mt管理器在储存目录“&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;”随便创建一个后缀为sh的文件</h3><h3 id="粘贴复制的代码到创建的文件并保存"><a href="#粘贴复制的代码到创建的文件并保存" class="headerlink" title="粘贴复制的代码到创建的文件并保存"></a>粘贴复制的代码到创建的文件并保存</h3><h3 id="执行该文件"><a href="#执行该文件" class="headerlink" title="执行该文件"></a>执行该文件</h3><p>第一次执行该文件，它会生成“whitelist.txt”文件，然后必须添加重要文件的“文件名”一行一个不得有空格否则配置文件白名单失效，你的文件会被删除，注意添加脚本和白名单文件的文件名。<br><img src="https://gitee.com/homnbrse-cow-force/cxxym.gitee.io/raw/master/45846.png"></p><h3 id="配置文件配置完成之后，你就可以执行你创建的清理文件了。"><a href="#配置文件配置完成之后，你就可以执行你创建的清理文件了。" class="headerlink" title="配置文件配置完成之后，你就可以执行你创建的清理文件了。"></a>配置文件配置完成之后，你就可以执行你创建的清理文件了。</h3><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="1-如果你有重要文件请不要使用此脚本"><a href="#1-如果你有重要文件请不要使用此脚本" class="headerlink" title="1.如果你有重要文件请不要使用此脚本"></a>1.如果你有重要文件请不要使用此脚本</h3><h3 id="2-请不要使用root执行脚本可能删除你的根目录文件"><a href="#2-请不要使用root执行脚本可能删除你的根目录文件" class="headerlink" title="2.请不要使用root执行脚本可能删除你的根目录文件"></a>2.请不要使用root执行脚本可能删除你的根目录文件</h3><h3 id="3-可能存在未知bug，作者能力有限暂未发现"><a href="#3-可能存在未知bug，作者能力有限暂未发现" class="headerlink" title="3.可能存在未知bug，作者能力有限暂未发现"></a>3.可能存在未知bug，作者能力有限暂未发现</h3><h3 id="4-使用本脚本造成任何财产损失及文件丢失作者无关"><a href="#4-使用本脚本造成任何财产损失及文件丢失作者无关" class="headerlink" title="4.使用本脚本造成任何财产损失及文件丢失作者无关"></a>4.使用本脚本造成任何财产损失及文件丢失作者无关</h3>]]></content>
    
    
    
    <tags>
      
      <tag>shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Termux安装hexo博客框架并部署到Github</title>
    <link href="/2022/09/22/%E4%BD%BF%E7%94%A8termux%E5%AE%89%E8%A3%85hexo%E5%B9%B6%E4%B8%8A%E4%BC%A0github/"/>
    <url>/2022/09/22/%E4%BD%BF%E7%94%A8termux%E5%AE%89%E8%A3%85hexo%E5%B9%B6%E4%B8%8A%E4%BC%A0github/</url>
    
    <content type="html"><![CDATA[<p>因为没电脑只有俩手机还没服务器，而自己又想再折腾客(原来的博客寄了，所以我便想到了hexo。查看了巨多教程之后，我发现这个东东竟然可以用手机安装并部署，在失败数次出现各种离谱报错之后，我总结了他人教程的经验，终于部署成功。<br>成功后我便想把手机安装部署写成教程作为我这博客的第二篇文章，于是就有了下面的教程。</p><h2 id="安装过程↓"><a href="#安装过程↓" class="headerlink" title="安装过程↓"></a>安装过程↓</h2><h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><p>下载termux建议使用Github仓库里面的最新版<br>自己去(浏览器)百度搜termux去官网然后跳转GitHub仓库下载</p><p>安装过程可能需要科学上网环境也可能不需要</p><p>如遇[y&#x2F;n]选项请输入y回车</p><h3 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">pkg install nodejs-lts</span><br></pre></div></figure></td></tr></table></figure><h3 id="三、安装git与vim编辑器"><a href="#三、安装git与vim编辑器" class="headerlink" title="三、安装git与vim编辑器"></a>三、安装git与vim编辑器</h3><p>git</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">pkg install git</span><br></pre></div></figure></td></tr></table></figure><p>vim编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">pkg install vim</span><br></pre></div></figure></td></tr></table></figure><h3 id="四、安装hexo并启动"><a href="#四、安装hexo并启动" class="headerlink" title="四、安装hexo并启动"></a>四、安装hexo并启动</h3><p>创建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="built_in">mkdir</span> hexo</span><br></pre></div></figure></td></tr></table></figure><p>进入文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></div></figure></td></tr></table></figure><p>安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">npm install hexo-cli -g</span><br></pre></div></figure></td></tr></table></figure><p>生成文件</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo init</span><br></pre></div></figure></td></tr></table></figure><p>生成静态网页文件</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo g</span><br></pre></div></figure></td></tr></table></figure><p>启动hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo s</span><br></pre></div></figure></td></tr></table></figure><p>启动后会出现预览链接可复制到浏览器打开<br>Ctrl加c 可以停止hexo预览</p><h2 id="部署过程↓"><a href="#部署过程↓" class="headerlink" title="部署过程↓"></a>部署过程↓</h2><h3 id="一、安装openssh并生成密钥"><a href="#一、安装openssh并生成密钥" class="headerlink" title="一、安装openssh并生成密钥"></a>一、安装openssh并生成密钥</h3><p>安装openssh“请不要在hexo文件内安装</p><p>退出hexo文件</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="built_in">cd</span> -</span><br></pre></div></figure></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">pkg install openssh</span><br></pre></div></figure></td></tr></table></figure><p>生成秘钥</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;随便输建议弄长些&quot;</span></span><br></pre></div></figure></td></tr></table></figure><p>注意：秘钥生成后注意此路径“data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;.ssh&#x2F;id_rsa.pub”后缀带有pub是公钥需粘贴到github，如果生成密钥之后跳出的地址不同请自觉替换</p><p>使用vim编辑器打开id_rsa.pub文件并复制其内全部内容</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">vim data/data/com.termux/files/home/.ssh/id_rsa.pub</span><br></pre></div></figure></td></tr></table></figure><p>按esc 输入“:wq”退出编辑器</p><h3 id="如何将公钥复制到github"><a href="#如何将公钥复制到github" class="headerlink" title="如何将公钥复制到github"></a>如何将公钥复制到github</h3><p>1.打开github官网并登录<br>2.点击左上角三条杠<br>3.点击“Settings”<br>4.点击“SSH and GPG keys”<br>5.滑到下方找到“SSH keys”点击对面的绿色按钮“New SSH key”<br>6.滑到最下方<br>7.Title框随便输<br>8.key框输入你复制的公钥“id_rsa.pub内容”<br>9.点击绿色按钮“Add SSH key”保存</p><p>复制到GitHub后可用以下命令查看是否可以连接到github</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">ssh git@github.com</span><br></pre></div></figure></td></tr></table></figure><h3 id="二、配置git"><a href="#二、配置git" class="headerlink" title="二、配置git"></a>二、配置git</h3><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">git config --global user.name <span class="string">&quot;你的github用户名&quot;</span></span><br></pre></div></figure></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">git config --global user.email <span class="string">&quot;你的github邮箱&quot;</span></span><br></pre></div></figure></td></tr></table></figure><p>弄完之后可通过以下面命令查看是否正确配置 </p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">git config user.email</span><br></pre></div></figure></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">git config user.name</span><br></pre></div></figure></td></tr></table></figure><h3 id="三、创建仓库"><a href="#三、创建仓库" class="headerlink" title="三、创建仓库"></a>三、创建仓库</h3><p>设置仓库名为 “你的github用户名.github.io<br>设置仓库为公共即钩选 “public”选项<br>设置添加自述文件即钩选 “Add a README file”<br>最后划到最下方点击绿色按钮创建仓库</p><h3 id="四、使用vim编辑器编辑“-config-yml”文件"><a href="#四、使用vim编辑器编辑“-config-yml”文件" class="headerlink" title="四、使用vim编辑器编辑“_config.yml”文件"></a>四、使用vim编辑器编辑“_config.yml”文件</h3><p>打开_config.yml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">vim _config.yml</span><br></pre></div></figure></td></tr></table></figure><p>滑倒最下方编辑最后一行“type: ‘’为</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="built_in">type</span>: git</span><br></pre></div></figure></td></tr></table></figure><p>并在type下方添加</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">repository: git@github.com:你的GitHub用户名/你的GitHub用户名.github.io</span><br><span class="line">  branch: main</span><br></pre></div></figure></td></tr></table></figure><h3 id="五、部署到GitHub"><a href="#五、部署到GitHub" class="headerlink" title="五、部署到GitHub"></a>五、部署到GitHub</h3><p>打开hexo文件</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></div></figure></td></tr></table></figure><p>hexo 文件下使用以下命令安装hexo-deployer-git </p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></div></figure></td></tr></table></figure><p>清除一些不需要的文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo clean</span><br></pre></div></figure></td></tr></table></figure><p>生成静态网页文件</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo g</span><br></pre></div></figure></td></tr></table></figure><p>部署命令</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo d</span><br></pre></div></figure></td></tr></table></figure><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><h3 id="如何写文章："><a href="#如何写文章：" class="headerlink" title="如何写文章："></a>如何写文章：</h3><p>输入下方命令回车会跳出一个后缀为md的文件的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">hexo new <span class="string">&quot;文章标题&quot;</span></span><br></pre></div></figure></td></tr></table></figure><p>使用vim打开这个文件(有root直接去mt或者其他的什么管理器)</p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line">vim 上方命令执行后跳出的路径</span><br></pre></div></figure></td></tr></table></figure><h3 id="关闭termux后再次进入的方法"><a href="#关闭termux后再次进入的方法" class="headerlink" title="关闭termux后再次进入的方法"></a>关闭termux后再次进入的方法</h3><p>打开hexo文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><figure><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></figure></td><td class="code"><figure><div class="code-wrapper"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></div></figure></td></tr></table></figure><p>在这个文件下你就可以执行hexo的命令了</p><h2 id="如教程有问题请联系我酷安-panxiao"><a href="#如教程有问题请联系我酷安-panxiao" class="headerlink" title="如教程有问题请联系我酷安@panxiao"></a>如教程有问题请联系我酷安@panxiao</h2>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>Termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
